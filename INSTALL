=====================
Installing MDAnalysis
=====================

Installation from source
========================

Currently MDAnalysis is only distributed in source form. You will need
a C compiler and pyrex to compile the DCD reader and numerical
extensions.

In the top directory, you can customize the setup by copying the setup
configuration template to setup.cfg and editing it.::

   cp setup.cfg.template setup.cfg

For instance, you can choose to use the Intel compiler for faster
code if you have it installed or you can add paths to the Intel
Math Kernel (MKL) libraries. However, this is not required and
everything should work without touching setup.cfg or
setup.cfg.template; if you have problem first try installing with
defaults (i.e. without using setup.cfg at all).


In principle, installation should be as simple as ::

   python setup.py build
   python setup.py install

This installs MDAnalysis in the system wide python directory; this may
require administrative privileges.

It is also possible to use --prefix and --home options for setup.py
to install in a different (probably your private) python directory
hierarchy.

Temporary installation
----------------------

If you want to install in a specific local directory, say just for
testing, use ::

  python setup.py build --build-lib=LOCAL_DIRECTORY

This installs a working MDAnalysis in LOCAL_DIRECTORY/MDAnalysis.



For testing we currently simply use ::

   python setup.py build --build-lib=~/python-lib/

This builds and installs a working version in
~/python-lib/MDAnalysis. Then add ~/python-lib to the PYTHONPATH

  export PYTHONPATH=${PYTHONPATH}:~/python-lib

Easy Install
------------

** NOT WORKING **
- fails to handle the compiled libraries properly -- OB 2010-02-02

We are also exploring the use of easy_install. This is experimental
but you might be able to do ::

  ez_install [options] ./mdanalysis

for a standard installation (see ez_install docs for details) or a
developer installation (that immediately reflects changes to the
sources) with ::

  cd ./mdanalysis
  python setup develop [options]



OS specific notes
=================

Linux
-----

* Tested with GNU compilers or Intel compilers and Intel MKL.

* To compile with the Intel compilers, set in setup.cfg ::

    [build]
    compiler=intel

  and install the Math Kernel Libraries (MKL). You will have to add
  the 'fast_numeric_*' paths in setup.cfg  under the [linux] section;
  see the template for examples.



Mac OS X
--------

* Tested with Mac OS X 10.4.11 and fink.

  The RMS-fitting code uses the fast vecLib framework for linear
  algebra. This is used automatically and no special settings are
  needed.
