======================
 MDAnalysis CHANGELOG
======================

The rules for this file:
  * entries are sorted newest-first.
  * summarize sets of changes - dont reproduce every subversion log comment here.
  * don't ever delete anything.
  * keep the format consistent (79 char width, M/D/Y date format).

------------------------------------------------------------------------------
09/19/10 orbeckst
	* quick-fix release 0.6.4.1
	* fixed import issue with python 2.5 (Issue 41)

09/16/10 orbeckst, danny.parton
	* release 0.6.4
	* GRO writer added
	* fixed XTC writer (Issue 38)
	* convert box representations (Issue 37)
	* primitive PDB parser added (slightly faster and ignores
	  correctness of resids, atomnames etc but reads CRYST1 into unitcell)
	* Universe gained the 'permissive' flag to switch on the
	  primitive PDB parser/reader
	* Simple 'chained reader' which enables a Universe to
	  transparently read a list of trajectory files (Issue 39).
        * Additional methods for AtomGroup: numberOfResidues(),
	  resids(), resnames()
        * new bilayer analysis script for membrane composition on a
	  per-leaflet basis (examples/membrane-composition.py); also
	  renamed examples/leaflet.py to membrane-leaflets.py

07/08/10 orbeckst, denniej0, danny.parton, philipwfowler
	* 0.6.3 release
        * minimum requirement is python 2.4 (using with_statement in the
          analysis module and we have not tested on 2.3 in a while)
        * analysis modules (MDAnalysis.analysis):
          - lipid bilayer leaflet detection
          - native contact analysis ("q1-q2")
	  - rms-fitting based on sequence alignment
        * write selections for other codes from AtomGroups (VMD, pymol, CHARMM,
          Gromacs ndx)
        * gro reader (Issue 31)
	* better API for loading a topology and a coordinate file in Universe()
        * trajectory reader: DCDReader can reverse trajectory with negative
          step increment; XTC/TRRReader can do simple (forward) slices by doing
          (slow!) sequential iteration
        * deprecated principleAxes() and introduced principalAxes() with less
          confusing return values (Issue 33).
	* fixed wrong unitcell dimensions for XTC/TRR (Issue 34)
 	* added basic XYZ reader with compression support (Issue 35)
	* PDB reader guesses masses (unknown elements are set to 0)
	* installation requires Biopython (www.biopython.org)
 
05/28/10 orbeckst, denniej0
        * 0.6.2 release
	* removed a number of imports from the top level (such as rms_fitting);
  	  this might break some scripts that still rely on the layout that was
  	  used for 0.5.x (which is now officially declared deprecated)
        * defined trajectory API
        * deprecated DCD.dcd_header --> DCD._dcd_header
	* XTC and TRR compute numframes by iterating through trajectory (slow!)
	* introduced units: base units are ps (time) and Angstrom (length); see core.flags
	* XTC and TRR automatically convert between native Gromacs units (ps, nm) and 
          base units (uses core.flags['convert_gromacs_lengths'] = True)
	* more test cases
        * *really* FIXED Issue 16 (can easy_install from tar file)
	* FIXED a bug in AtomGroup.principalAxes()
	* added dependency information to setup.py (numpy and
  	  biopython by default; nose for tests)

04/30/10 orbeckst

        * 0.6.1 release
	* can build a simple Universe from a PDB file (FIXES Issue 11)
        * can read Gromacs XTC and TRR files (FIXES Issue 1) but no
	  Timeseries or Collections yet for those formats
	* removed Universe.load_new_dcd() and Universe.load_new_pdb()
	  --- use the generic Universe.load_new() (MIGHT BREAK OLD CODE)
        * removed deprecated Universe._dcd attribute (MIGHT BREAK OLD CODE)
        * FIXED bug in PDB.PDBWriter and CRD.CRDWriter
        * use SloppyPDB in order to cope with large PDB files
	* core.distances.self_distance_array() is now behaving the
	  same way as distance_array()
        * defined Trajectory API (see MDAnalysis/coordinates/__init__.py)
	* renamed _dcdtest to dcdtimeseries (will not affect old code)
	* unit tests added (still need more test cases)

03/31/10 orbeckst, denniej0 
        * 0.6.0 release
        * added KDTree and Neighbour searching code from Biopython for
          faster distance selections: used for AROUND selections;
	  POINT is using distance matrix by default as this is
	  faster. This can be configured with core.flags
	* core.flags infrastructure to tweak behaviour at run time
        * updated LICENSE file with Biopython License
 	* some selections for nucleic acids
        * completely reorganized directory structure to make
          enhancements easier to incorporate
	* FIXED (partial): Issue 18 (Timeseries from a universe.segID
          selection, reported by lordnapi)
        * FIXED: Issue 19 (Timeseries collections were broken,
          reported by Jiyong)
        * can write single frames as pdb or crd (AtomGroup gained the
          write() method)
	* some selections for nucleic acids
        * completely reorganized directory structure to make
          enhancements easier to incorporate
        * FIXED: Issue 19 (Timeseries collections were broken)
        * improved installation
          - EasyInstall (setuptools) support (FIXED Issue 16)
	  - better instructions in INSTALL
          - slightly better handling of the configuration of the fast
            linear algebra libs via the setup.cfg file



08/23/08 naveen, orbeckst
        * 0.5.1 release
	* primitive PDB writer (only works if coordinates were read from a pdb)
        * B-factor property (detailed implementation subject to change)
        * periodic flag for PointSelection
	* new correl series: orientation vector for 3-site molecules
	  (to calculate the water dipole moment of SPC or TIP3P)
	* distance.distance_array() bug fixed (see doc string)
        * updated LICENSE file UIUC Open Source License

01/29/08 orbeckst
	* prepared 0.5.0 release. Includes previously disabled
	  distance code, PDB reader, incomplete XTC reader (code by
	  Benjamin Hall), and marginally updated documentation &
	  licenses

11/12/07 naveen
        * prepared for release outside lab

